/*
 * Course: CSC1020
 * Lab 2 - Exceptions
 * Main Driver class
 * Name: Matthew Bender
 * Last Updated: 9/11/2024
 */
package benderm;

import java.util.Scanner;

/**
 * Unfinished. Asks user for dice specifications and creates an array of Die objects.
 */
public class Driver {
    private static int[] sumFrequencies;

    public static void main(String[] args) {
        int[] input = getInput();

        sumFrequencies = new int[(input[1] - 1) * input[0] + 1];
        Die[] dice = createDice(input[0], input[1]);

        rollDice(dice, input[2], input[0]);
    }

    /**
     * Asks user for number of dice, size of dice, and number of trials.
     *
     * @return [0:number of dice, 1:size of dice, 2:number of trials]
     */
    private static int[] getInput() {
        int[] nums = new int[3];
        Scanner sc = new Scanner(System.in);

        boolean isValid = false;
        while (!isValid) {
            System.out.println("Please enter three numbers separated by a space: " +
                    "number of dice, size of dice, and number of trials.");
            String input = sc.nextLine();

            String[] splitInput = input.split(" ");
            if (splitInput.length != 3) {
                System.out.println("Improper separation. Try again.");
                continue;
            }

            try {
                for (int i = 0; i < 3; i++) {
                    nums[i] = Integer.parseInt(splitInput[i]);
                }
            } catch (NumberFormatException e) {
                System.out.println("Includes non-decimal non-space character " +
                        "or only two numbers. Try again.");
                continue;
            }

            isValid = true;
        }

        sc.close();
        return nums;
    }

    /**
     * Instantiates an array of Die objects.
     *
     * @param num length of the array - number of dice
     * @param size size of dice - maximum number that can be generated by dice
     * @return an array of length num filled with Die objects created with the size parameter
     */
    private static Die[] createDice(int num, int size) {
        Die[] dice = new Die[num];
        for (int i = 0; i < num; i++) {
            dice[i] = new Die(size);
        }

        return dice;
    }

    private static void rollDice(Die[] dice, int trials, int numDice) {
        for (int i = 0; i < trials; i++) {
            for (Die die : dice) {
                die.roll();
                try {
                    sumFrequencies[die.getCurrentValue() - numDice]++;
                } catch (DieNotRolledException e) {
                    System.out.println("DICE NOT ROLLED");
                }
            }
        }
    }
}